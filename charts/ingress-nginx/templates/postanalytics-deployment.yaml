{{- if .Values.controller.wallarm.enabled }}
{{- if eq .Values.controller.wallarm.postanalytics.kind "Deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "ingress-nginx.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ template "ingress-nginx.wallarmPostanalyticsName" . }}
    {{- with .Values.controller.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  name: {{ include "ingress-nginx.controller.fullname" . }}-wallarm-wstore
  namespace: {{ include "ingress-nginx.namespace" . }}
  {{- if .Values.controller.wallarm.postanalytics.annotations }}
  annotations:
  {{ toYaml .Values.controller.wallarm.postanalytics.annotations | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "ingress-nginx.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ template "ingress-nginx.wallarmPostanalyticsName" . }}
  replicas: {{ .Values.controller.wallarm.postanalytics.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      annotations:
        checksum/wcli: {{ .Values.controller.wallarm.wcliPostanalytics | toJson | sha256sum }}
      {{- if not .Values.controller.wallarm.existingSecret.enabled }}
        checksum/token: {{ .Values.controller.wallarm.token | sha256sum }}
      {{- end }}
      {{- with .Values.controller.wallarm.postanalytics.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ingress-nginx.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ template "ingress-nginx.wallarmPostanalyticsName" . }}
      {{- with .Values.controller.wallarm.postanalytics.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.controller.wallarm.postanalytics.terminationGracePeriodSeconds }}
      initContainers:
        {{ $_ := set .Values "register_mode" "post_analytic" }}
        {{ include "ingress-nginx.wallarmInitContainer.init" . | nindent 8 }}
      containers:
        - name: wcli
        {{- if .Values.controller.wallarm.wcliPostanalytics.image }}
          {{- with .Values.controller.wallarm.wcliPostanalytics.image }}
          image: "{{ .repository }}:{{ .tag }}"
          {{- end }}
        {{- else }}
          image: "{{ .Values.controller.wallarm.helpers.image }}:{{ .Values.controller.wallarm.helpers.tag }}"
        {{- end }}
          imagePullPolicy: "{{ .Values.controller.image.pullPolicy }}"
          args: ["wcli", "run", {{ include "ingress-nginx.wcli-args" .Values.controller.wallarm.wcliPostanalytics | trimSuffix ", " | replace "\n" "" }}]
          env:
          {{- include "wallarm.credentials" . | nindent 10 }}
          - name: WALLARM_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        {{- if .Values.controller.wallarm.wcliPostanalytics.metrics.enabled }}
          - name: WALLARM_WCLI__METRICS__LISTEN_ADDRESS
            value: "{{ .Values.controller.wallarm.wcliPostanalytics.metrics.host }}"
          {{- if .Values.controller.wallarm.wcliPostanalytics.metrics.endpointPath }}
          - name: WALLARM_WCLI__METRICS__ENDPOINT
            value: "{{ .Values.controller.wallarm.wcliPostanalytics.metrics.endpointPath }}"
          {{- end }}
        {{- else }}
          - name: WALLARM_WCLI__METRICS__LISTEN_ADDRESS
            value: ""
        {{- end }}
        {{- if .Values.controller.wallarm.wcliPostanalytics.extraEnvs }}
          {{- toYaml .Values.controller.wallarm.wcliPostanalytics.extraEnvs | nindent 10 }}
        {{- end }}
        {{- if .Values.controller.wallarm.wcliPostanalytics.metrics.enabled }}
          ports:
          - name: {{ .Values.controller.wallarm.wcliPostanalytics.metrics.portName }}
            containerPort: {{ .Values.controller.wallarm.wcliPostanalytics.metrics.port }}
            protocol: TCP
        {{- end }}
          volumeMounts:
          - mountPath: {{ include "wallarm.path" . }}
            name: wallarm
          - mountPath: {{ include "wallarm-acl.path" . }}
            name: wallarm-acl
          - mountPath: /secrets/wallarm/token
            name: wallarm-token
            subPath: token
            readOnly: true
          securityContext: {{ include "ingress-nginx.controller.containerSecurityContext" . | nindent 12 }}
{{- with .Values.controller.wallarm.wcliPostanalytics.resources }}
          resources:
{{ toYaml . | nindent 12 }}
{{- end }}
        - name: wstore
        {{- if .Values.controller.wallarm.postanalytics.image }}
          {{- with .Values.controller.wallarm.postanalytics.image }}
          image: "{{ .repository }}:{{ .tag }}"
          {{- end }}
        {{- else }}
          image: "{{ .Values.controller.wallarm.helpers.image }}:{{ .Values.controller.wallarm.helpers.tag }}"
        {{- end }}
          imagePullPolicy: "{{ .Values.controller.image.pullPolicy }}"
          args: ["wstore"]
          env:
            - name: SLAB_ALLOC_ARENA
              value: "{{ .Values.controller.wallarm.postanalytics.arena }}"
            {{- if .Values.controller.wallarm.postanalytics.serviceAddress }}
            - name: WALLARM_WSTORE__SERVICE__ADDRESS
              value: "{{ .Values.controller.wallarm.postanalytics.serviceAddress }}"
            {{- end }}
            {{- if .Values.controller.wallarm.postanalytics.serviceProtocol }}
            - name: WALLARM_WSTORE__SERVICE__PROTOCOL
              value: "{{ .Values.controller.wallarm.postanalytics.serviceProtocol }}"
            {{- end }}
          {{- if .Values.controller.wallarm.postanalytics.tls.enabled }}
            {{ include "ingress-nginx.wallarmWstoreTlsVariables" . | nindent 12 }}
          {{- end }}
          {{- if (index .Values "controller" "wallarm" "postanalytics" "extraEnvs") }}
            {{- toYaml (index .Values "controller" "wallarm" "postanalytics" "extraEnvs") | nindent 12 }}
          {{- end }}
          securityContext: {{ include "ingress-nginx.controller.containerSecurityContext" . | nindent 12 }}
          volumeMounts:
            - mountPath: /opt/wallarm/etc/wallarm
              name: wallarm
          {{- if .Values.controller.wallarm.postanalytics.extraVolumeMounts }}
            {{- toYaml .Values.controller.wallarm.postanalytics.extraVolumeMounts | nindent 12 }}
          {{- end }}
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - nc -z localhost {{ template "ingress-nginx.wallarmPostanalyticsPort" . }}
            initialDelaySeconds: {{ .Values.controller.wallarm.postanalytics.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.controller.wallarm.postanalytics.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.controller.wallarm.postanalytics.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.controller.wallarm.postanalytics.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.controller.wallarm.postanalytics.livenessProbe.failureThreshold }}
          ports:
            - name: wstore
              containerPort: {{ template "ingress-nginx.wallarmPostanalyticsPort" . }}
              protocol: TCP
        {{- if .Values.controller.wallarm.postanalytics.resources }}
          resources: {{ toYaml .Values.controller.wallarm.postanalytics.resources | nindent 12 }}
        {{- end }}
        - name: wallarm-appstructure
        {{- if (index .Values "controller" "wallarm" "wallarm-appstructure" "image") }}
          {{- with (index .Values "controller" "wallarm" "wallarm-appstructure" "image") }}
          image: "{{ .repository }}:{{ .tag }}"
          {{- end }}
        {{- else }}
          image: "{{ .Values.controller.wallarm.helpers.image }}:{{ .Values.controller.wallarm.helpers.tag }}"
        {{- end }}
          imagePullPolicy: "{{ .Values.controller.image.pullPolicy }}"
          args: ["appstructure"]
        {{- if (index .Values "controller" "wallarm" "wallarm-appstructure" "extraEnvs") }}
          env:
            {{- toYaml (index .Values "controller" "wallarm" "wallarm-appstructure" "extraEnvs") | nindent 12 }}
        {{- end }}
          securityContext: {{ include "ingress-nginx.controller.containerSecurityContext" . | nindent 12 }}
          volumeMounts:
          - mountPath: /opt/wallarm/etc/wallarm
            name: wallarm
        {{- if index .Values "controller" "wallarm" "wallarm-appstructure" "resources" }}
          resources: {{ toYaml (index .Values "controller" "wallarm" "wallarm-appstructure" "resources") | nindent 12 }}
        {{- end }}
    {{- if .Values.controller.wallarm.postanalytics.nodeSelector }}
      nodeSelector: {{ toYaml .Values.controller.wallarm.postanalytics.nodeSelector | nindent 8 }}
    {{- end }}
    {{- if .Values.controller.wallarm.postanalytics.tolerations }}
      tolerations: {{ toYaml .Values.controller.wallarm.postanalytics.tolerations | nindent 8 }}
    {{- end }}
    {{- if .Values.controller.wallarm.postanalytics.affinity }}
      affinity: {{ toYaml .Values.controller.wallarm.postanalytics.affinity | nindent 8 }}
    {{- end }}
    {{- if .Values.controller.wallarm.postanalytics.topologySpreadConstraints }}
      topologySpreadConstraints: {{ toYaml .Values.controller.wallarm.postanalytics.topologySpreadConstraints | nindent 8 }}
    {{- end }}
      volumes:
        - name: wallarm
          emptyDir: {}
        - name: wallarm-acl
          emptyDir: {}
        - name: wallarm-apifw
          emptyDir: {}
        {{- include "ingress-nginx.wallarmTokenVolume" . | nindent 8 }}
      {{- if .Values.controller.wallarm.postanalytics.extraVolumes }}
        {{ toYaml .Values.controller.wallarm.postanalytics.extraVolumes | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
