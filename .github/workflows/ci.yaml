name: CI

on:
  workflow_dispatch:

jobs:
#  build_base:
#    name: Build base
#    runs-on: custom-runner
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v31
#
#      - name: Setup Docker Buildx
#        uses: docker/setup-buildx-action@v2
#        with:
#          version: latest
#          use: false
#
#      - name: Build
#        run: |
#          eval $(ssh-agent -s)
#          echo "${{ secrets.GITLAB_DEPLOY_KEY }}" | tr -d '\r' | ssh-add -
#          cd images/nginx && make OUTPUT=--load build
#          docker images

  build-controller:
    name: Build controller
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build image
        env:
          ARCH: amd64
          REGISTRY: wallarm
          TAG: 1.0.0-dev
        run: |
          export BASE_IMAGE="wallarm/ingress-nginx:$(cat TAG)"
          make clean-image build image
          make -C test/e2e-image image
          docker save -o docker.tar wallarm/ingress-controller:1.0.0-dev nginx-ingress-controller:e2e

      - name: Cache image
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: docker.tar
          path: docker.tar

  test:
    name: E2E test
    runs-on: self-hosted
    needs:
      - build-controller
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Load cache
        uses: actions/download-artifact@v3
        with:
          name: docker.tar

      - name: Load images from cache
        run: docker load -i docker.tar

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.8.0'

      - name: Create cluster
        uses: helm/kind-action@v1.3.0
        with:
          verbosity: "0"
          wait: "240s"
          version: v0.15.0
          node_image: kindest/node:v1.24.4
          config: test/e2e/kind.yaml
          cluster_name: kind

      - name: Wait cluster
        run: |
          kubectl cluster-info
          kubectl wait --for=condition=Ready pods --all --timeout=180s -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}

      - name: Run e2e tests
        env:
          KIND_CLUSTER_NAME: kind
          SKIP_CLUSTER_CREATION: true
          SKIP_IMAGE_CREATION: true
          ARCH: amd64
        run: |
          kubectl get all
          kubectl cluster-info
          kubectl cluster-info --context kind-kind
          kind get kubeconfig > $HOME/.kube/kind-config-kind
          kubectl config use-context kind-kind
          kubectl cluster-info
          kubectl cluster-info --context kind-kind
          make E2E_NODES=15 kind-e2e-test


#      - name: Install Helm chart
#        run: |
#          set -x
#          helm install wallarm-ingress ./charts/ingress-nginx \
#            --set controller.image.tag=1.0.0-dev \
#            --set controller.wallarm.fallback="off" \
#            --set controller.wallarm.token=${{ secrets.WALLARM_NODE_TOKEN }} \
#            --set controller.hostPort.enabled=true \
#            --set controller.service.type=NodePort \
#            --timeout 5m0s \
#            --debug \
#            --wait
