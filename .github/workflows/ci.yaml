name: CI

on:
  workflow_dispatch:

jobs:
#  build-base:
#    name: Build base
#    runs-on: custom-runner
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v31
#
#      - name: Setup Docker Buildx
#        uses: docker/setup-buildx-action@v2
#        with:
#          version: latest
#          use: false
#
#      - name: Build
#        run: |
#          eval $(ssh-agent -s)
#          echo "${{ secrets.GITLAB_DEPLOY_KEY }}" | tr -d '\r' | ssh-add -
#          cd images/nginx && make OUTPUT=--load build
#          docker images

  build-controller:
    name: Build controller
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build image
        env:
          ARCH: amd64
          REGISTRY: wallarm
          TAG: 1.0.0-dev
        run: |
          # If base was not changed
          export BASE_IMAGE="wallarm/ingress-nginx:$(cat TAG)"
          # TODO handle case when base image was changed
          # export BASE_IMAGE="wallarm/ingress-nginx:1.0.0-dev"
          make clean-image build image
          make -C test/e2e-image image
          docker save -o docker.tar wallarm/ingress-controller:1.0.0-dev nginx-ingress-controller:e2e

      - name: Cache image
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: docker.tar
          path: docker.tar


  smoke:
    name: Smoke
    runs-on: ubuntu-latest
    needs:
      - build-controller
    strategy:
      matrix:
        k8s: [v1.23.10, v1.24.4, v1.25.0]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Load cache
        uses: actions/download-artifact@v3
        with:
          name: docker.tar

      - name: Load images
        run: docker load -i docker.tar

      - name: Install helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.8.0'

      - name: Create cluster
        uses: helm/kind-action@v1.3.0
        with:
          version: v0.15.0
          cluster_name: kind
          node_image: kindest/node:${{ matrix.k8s }}

      - name: Run smoke tests
        env:
          ARCH: amd64
          KIND_CLUSTER_NAME: kind
          SKIP_CLUSTER_CREATION: true
          SKIP_IMAGE_CREATION: true
          WALLARM_API_TOKEN: ${{ secrets.WALLARM_API_TOKEN }}
          USER_UUID: ${{ secrets.WALLARM_API_USER_UUID }}
          USER_SECRET: ${{ secrets.WALLARM_API_USER_SECRET }}
          CLIENT_ID: ${{ secrets.WALLARM_API_CLIENT_ID }}
        run: |
          echo ${{ secrets.GITLAB_TOKEN_SECRET }} | docker login -u ${{ secrets.GITLAB_TOKEN_NAME }} --password-stdin dkr.wallarm.com
          kind get kubeconfig > $HOME/.kube/kind-config-kind
          make kind-smoke-test

#  e2e:
#    name: E2E - Wallarm disabled
#    runs-on: ubuntu-latest
#    needs:
#      - build-controller
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Load cache
#        uses: actions/download-artifact@v3
#        with:
#          name: docker.tar
#
#      - name: Load images
#        run: docker load -i docker.tar
#
#      - name: Install Helm
#        uses: azure/setup-helm@v3
#        with:
#          version: 'v3.8.0'
#
#      - name: Create cluster
#        uses: helm/kind-action@v1.3.0
#        with:
#          verbosity: "0"
#          wait: "240s"
#          version: v0.15.0
#          node_image: kindest/node:v1.24.4
#          config: test/e2e/kind.yaml
#          cluster_name: kind
#
#
#      - name: Run e2e tests
#        env:
#          KIND_CLUSTER_NAME: kind
#          SKIP_CLUSTER_CREATION: true
#          SKIP_IMAGE_CREATION: true
#          ARCH: amd64
#        run: |
#          kind get kubeconfig > $HOME/.kube/kind-config-kind
#          make E2E_NODES=10 kind-e2e-test
#
#
#
#  e2e-wallarm-enabled:
#    name: E2E - Wallarm enabled
#    runs-on: self-hosted
#    needs:
#      - build-controller
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Load cache
#        uses: actions/download-artifact@v3
#        with:
#          name: docker.tar
#
#      - name: Load images
#        run: docker load -i docker.tar
#
#      - name: Install Helm
#        uses: azure/setup-helm@v3
#        with:
#          version: 'v3.8.0'
#
#      - name: Create cluster
#        uses: helm/kind-action@v1.3.0
#        with:
#          verbosity: "0"
#          wait: "240s"
#          version: v0.15.0
#          node_image: kindest/node:v1.24.4
#          config: test/e2e/kind.yaml
#          cluster_name: kind
#
#      - name: Run e2e tests
#        env:
#          ARCH: amd64
#          KIND_CLUSTER_NAME: kind
#          SKIP_CLUSTER_CREATION: true
#          SKIP_IMAGE_CREATION: true
#          ARCH: amd64
#          WALLARM_ENABLED: true
#          WALLARM_API_TOKEN: ${{ secrets.WALLARM_API_TOKEN }}
#        run: |
#          kind get kubeconfig > $HOME/.kube/kind-config-kind
#          make E2E_NODES=10 kind-e2e-test
