# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Vulnerability Scan

on:
  workflow_dispatch:
  release:
  schedule:
    - cron: '00 9 * * 1'

permissions:
  contents: read
  security-events: write

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0

      - name: Latest Tag
        id: version
        shell: bash
        run: |
          TAG=$(cat TAG)
          echo "TAG: ${TAG}"
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

  scan:
    runs-on: ubuntu-latest
    needs: version
    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

    - shell: bash
      id: test
      run: echo "Scanning docker.io/wallarm/ingress-controller@${{ needs.version.outputs.tag }}"

    - name: Scan image with AquaSec/Trivy
      id: scan
      uses: aquasecurity/trivy-action@6e7b7d1fd3e4fef0c5fa8cce1229c54b2c9bd0d8 # v0.24.0
      with:
        image-ref: docker.io/wallarm/ingress-controller:${{ needs.version.outputs.tag }}
        format: 'sarif'
        output: trivy-results-${{ needs.version.outputs.tag }}.sarif
        exit-code: 0
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'

    - name: Output Sarif File
      shell: bash
      run: cat ${{ github.workspace }}/trivy-results-${{ needs.version.outputs.tag }}.sarif

    # This step checks out a copy of your repository.
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@c36620d31ac7c881962c3d9dd939c40ec9434f2b # v3.26.12
      with:
        token: ${{ github.token }}
        # Path to SARIF file relative to the root of the repository
        sarif_file: ${{ github.workspace }}/trivy-results-${{ needs.version.outputs.tag }}.sarif

    - name: Vulz Count
      shell: bash
      run: |
        TRIVY_COUNT=$(cat ${{ github.workspace }}/trivy-results-${{ needs.version.outputs.tag }}.sarif | jq '.runs[0].results | length')
        echo "TRIVY_COUNT: $TRIVY_COUNT"
        echo "Image Vulnerability scan output" >> $GITHUB_STEP_SUMMARY
        echo "Image ID: docker.io/wallarm/ingress-controller@${{ needs.version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Trivy Count: $TRIVY_COUNT" >> $GITHUB_STEP_SUMMARY
